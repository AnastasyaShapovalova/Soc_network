{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","Preloader","Post","item","message","onClick","deletePost","id","likesCounter","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElements","posts","map","p","key","likesCount","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","deletePostActionCreator","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.cd71ea38.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const  withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return  <Redirect to = {\"/login\"} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__pMXtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3qy34\",\"posts\":\"MyPosts_posts__31z7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2mvM4\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode  =  () => {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n       this.setState({\r\n           status: e.currentTarget.value\r\n       });\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (prevProps.status !==this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState( false);\r\n    let [status,setStatus] = useState( props.status);\r\n\r\n    useEffect( () =>{\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input  onChange={onStatusChange} autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile ) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className = {classes.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n               <ProfileStatusWithHooks\r\n                   status = {status}\r\n                   updateStatus = {updateStatus}\r\n\r\n               />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    const onDeletePost = () => {\r\n        props.deletePost(props.id)\r\n    }\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img src='https://i.ytimg.com/vi/48jatw-mm9s/maxresdefault.jpg'></img>\r\n                        {props.message}\r\n                        <span onClick={onDeletePost}></span>\r\n            <div>\r\n                <span>Like</span> {props.likesCounter}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name = \"newPostText\" component = {Textarea} placeholder = {\"Post message\"}\r\n                       validate = {[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n        let postsElements =\r\n            props.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCounter={p.likesCount}\r\n                                       deletePost={props.deletePost}/>)\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={classes.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n})\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator,\r\n    deletePostActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n        deletePost: (id) => {\r\n            dispatch(deletePostActionCreator(id))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status = {props.status}\r\n                updateStatus = {props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Profile);","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push( \"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}