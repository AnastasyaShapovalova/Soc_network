{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialog","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,uICG1IC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IACvCC,EADsC,uKAGpC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADK,kBAAC,IAAD,CAAUC,GAAM,eAHZ,GACZC,IAAML,WAQtC,OADqCM,YAAQX,EAARW,CAAoCL,K,+FCH9DM,EATI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKC,UAAaC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,kBAAC,IAAD,CAAST,GAAMI,GAAOL,EAAMW,QCCzBC,EANC,SAACZ,GACb,OACI,yBAAKO,UAAaC,IAAQC,QAAST,EAAMa,U,yCCA3CC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAdQ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IACbC,SAAY,CAACC,IAAUV,GACvBH,KAAO,iBACPc,YAAc,wBAEzB,6BAAK,6CCsBFC,EA/BC,SAAC1B,GAEb,IAAIP,EAAQO,EAAM2B,YAEdC,EACDnC,EAAMoC,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYpB,KAAQoB,EAAEpB,KAAMqB,IAAOD,EAAEzB,GAAIA,GAAMyB,EAAEzB,QACxE2B,EACAxC,EAAMyC,SAASJ,KAAK,SAAAK,GAAC,OAAK,kBAAC,EAAD,CAAStB,QAAWsB,EAAEtB,QAASmB,IAAOG,EAAE7B,QAElEb,EAAM2C,eAMV,OAAKpC,EAAMN,OAGP,yBAAKa,UAAaC,IAAQqB,SACtB,yBAAKtB,UAAaC,IAAQ6B,cACrBT,GAEL,yBAAKrB,UAAaC,IAAQ0B,UACtB,6BAAMD,GACN,kBAAC,EAAD,CAAgBf,SAbR,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOF,qBAGD,kBAAC,IAAD,CAAUnC,GAAM,Y,wBCCjCuC,sBACXrC,aAhBkB,SAACV,GACnB,MAAO,CACHkC,YAAalC,EAAMkC,gBAIF,SAACc,GACtB,MAAO,CACHF,YAAa,SAACH,GACXK,EAASC,YAAmBN,SAQnCxC,IAFW4C,CAGbd","file":"static/js/4.b10f1d40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2etUm\",\"dialogsItems\":\"Dialogs_dialogsItems__1Kwyu\",\"active\":\"Dialogs_active__2RgN6\",\"messages\":\"Dialogs_messages__KVcwE\"};","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const  withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return  <Redirect to = {\"/login\"} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return(\r\n        <div className = {classes.dialog + ' ' + classes.active}>\r\n            <NavLink to = {path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className = {classes.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component = {Textarea}\r\n                       validate = {[required, maxLength50]}\r\n                       name = \"newMessageBody\"\r\n                       placeholder = \"Enter your message\"/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements =\r\n       state.dialogs.map( d => <DialogItem name = {d.name} key = {d.id} id = {d.id}/>);\r\n    let messagesElements =\r\n        state.messages.map (m =>  <Message message = {m.message} key = {m.id} />);\r\n    let newMessageBody =\r\n        state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth ) return  <Redirect to = {\"/login\"} />;\r\n\r\n    return (\r\n        <div className = {classes.dialogs}>\r\n            <div className = {classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className = {classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit = {addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n           dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}